a<-1
a
a
a<-1
a
a = 1
a
a = 1
a
a = 2
a
a = 1
a
a <- 1
a
a <- 2
a
a
a = 2
a
a = 1
a
a <- 1
a
a <- 2
a
a = 1
a == 1
a != 1
a > 1
a
a <- "abc"
a
abc <- 2
abc
a <- abc
a
class(a)
class(abc)
a
a <- a.character(a)
a <- as.character(a)
a
class(a)
c(1, 2, 3)
# vector = column
a <- c(1, 2, 3)
a
a[1]
# vector = column
# () <- 함수를 의미함
a <- c(50, 20, 30)
a[1]
a[2]
a[3]
a[4]
b <- c(1, 2, 3)
b
a + b
a + 1
b * 2
a <- c("aa", "bb", "cc")
a[1]
a[c(1, 2)]
a[c(1, 3)]
a[1, 2]
a[c(1, 3)]
a[c(3, 2, 1)]
a[1:3]
a[-1]
a[3]
a[-3]
a[-c(1, 3)]
a[-c(1, 3)]
a[-c(1, 3)]
a[-c(1:2)]
a[c(T, T, F)]
a[c(T, T, F)]
a[a == "aa"]
a <- 1:100
a %% 2
a <- 1:100 # a에 1부터 100까지 넣는다.
a
a %% 2 # 나머지 구하는 연산
a[a %% 2 == 0]
c(2, 4, 6, 8) + c(1, 3, 5, 7, 9)
c(2, 4, 6, 8) + c(1, 3, 5, 7, 9)
z = c(1:3, NA)
z
is.na(z)
b = c(1, 1, 1, 2)
b == 2
c(1, 1, 1, 2) == 2
c(1, 1, 1, 2) == 2
c(1, 1, 1, 2) == 2
z == na
z == NA
c(1, 1, 1, na)
c(1, 1, 1, NA)
c(1, 1, 1, NA) == NA
c(1, 1, 1, NA) == 2
c(1, 1, 1, NA) == NA
matrix(1:15, ncol=3, byrow = T)
? matrix
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
mdat
mdat
dimnames
dimnames
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3"))
mdat <- matrix(c(1,2,3, 11,12,13), nrow = 2, ncol = 3, byrow = TRUE,
dimnames = list(c("row1", "row2"),
c("C.1", "C.2", "C.3")))
dimnames
m <- matrix(1:15, ncol=3, byrow = T)
m
m[2,2]
mdat
mp[1,]
mp[1,c(1, 2, 3)]
m[1,c(1, 2, 3)]
m[1,]
m[,]
m[,1]
m[-1,]
m[,-1]
m[c(1, 3), ]
m[-c(1, 3)]
m[-c(1, 3),]
m[-c(1, 3),]
m
m
m
m
m[-c(1, 3),]
m
m[2:4, 2]
m[2:4, c(2, 3)]
m
data.frame(m)
m2 <- data.frame(m)
m2
m[,1] <- as.character(m[,1])
m
m2
str(m2)
str(m2) # str structure의 약자 데이터 프레임의 구조를 보여준다.
m2[,1] <- as.character(m2[,1])
str(m2)
m2
m2
as.matrix(m2)
as.numeric(as.matrix(m2))
m3 <- as.numeric(as.matrix(m2))
sex <- c("남", "여", "여", "남")
sex
sex2 <=ifelse(sex=="남", 1, 0)
sex2 <-ifelse(sex=="남", 1, 0)
sex2 <-ifelse(sex=="남", 1, 0)
sex2
m2[,1]
m2$X1
m2
m2$x4 <- c(1, 2, 3, 4, 5)
m2
matrix(1:15, ncol=3)
mdat
m2
m2
cbind(m2, c(3, 2, 4, 5, 5))
rbind(m2, c(3, 2, 4, 5))
cbind(m2, m2)
rbind(m2, m2)
print(i)
for(i in 1:10){
print(i)
}
for(i in 1:10){
print(i)
# for 문
for(i in 1:10){
print(i)
}
print(j)
for(j in c(1, 3, 5, 7)){
print(j)
}
for(j in c(7, 5, 3, 1)){
print(j)
}
m2
for(i in 1:10) {
m2 <- rbind(m2,m2)
}
m2
dim(m2)
m3 <- NULL
m3 <- NULL
for(i in 1:10) {
m3 <- rbind(m2,m2)
print(i)
print(dim(m3))
}
m3 <- NULL
for(i in 1:10) {
m3 <- rbind(m3,m2)
print(i)
print(dim(m3))
}
for(i in 1:10) {
m3 <- rbind(m3,m2)
print(i)
print(dim(m3))
}
m2
m2
m3<-NULL
for(i in 1:10) {
m3 <- rbind(m3,m2)
print(i)
print(dim(m3))
}
m2 <- data.frame(m)
m2
m3<-NULL
for(i in 1:10) {
m3 <- rbind(m3,m2)
print(i)
print(dim(m3))
}
dim(m3)
m3<-NULL
for(i in 1:10) {
if(i %% 2 == 0){
next;
}
m3 <- rbind(m3,m2)
cat(i)
}
m3<-NULL
for(i in 1:10) {
if(i %% 2 == 0){
next;
}
m3 <- rbind(m3,m2)
cat("\n", i)
}
m3<-NULL
for(i in 1:10) {
if(i %% 2 == 0){
# next;
}else{
}
m3 <- rbind(m3,m2)
cat("\n", i)
}
m3<-NULL
for(i in 1:10) {
if(i %% 2 == 0){
# next;
}else{
m3 <- rbind(m3,m2)
}
cat("\n", i)
}
dim(m3)
cat(i)
i<-1
while(True) {
cat(i)
}
i<-1
while(TRUE) {
cat(i)
}
i<-1
while(i<100) {
if( i > 50) {
break;
}
print(i)
i <- i+1
}
runif(1, min=-0.001, max=0.01)
i<-100
runif(1, min=-0.001, max=0.01)
while(i<0.01){
i<-i-runif(1, min=-0.001, max=0.01)
cat("\n", i)
}
i
i<-100
while(i>0.01){
i<-i-runif(1, min=-0.001, max=0.01)
cat("\n", i)
}
i
i<-100
while(i>0.01){
i<- i-runif(1, min=-0.001, max=0.01)
cat("\n", i)
}
m <- matrix(1:15, ncol=3, byrow = T)
m2 <- data.frame(m)
m2
? paste0
colname(m2) <- paste0("v1", 1:3)
m2
m2
m <- matrix(1:15, ncol=3, byrow = T)
m2 <- data.frame(m)
m2
colnames(m2) <- paste0("v1", 1:3)
m2
m <- matrix(1:15, ncol=3, byrow = T)
m2
m <- matrix(1:15, ncol=3, byrow = T)
m2 <- data.frame(m)
m2
colnames(m2) <- paste0("v", 1:3)
m2
"+"(2,)
"+"(2,3)
? sd
? stdev
? var
x <- 1:100
x
sum(x>50)
? sum
sum(1:5)
sum(1:50)
sum(1:100)
getwd() # 현재 작업공간을 불러온다.working directory
getwd("/Users/skyepodium/dev/r")
setwd("/Users/skyepodium/dev/r")
getwd()
setwd("/Users/skyepodium/dev/r/input")
getwd()
write.csv(m2, "m2.csv")
read.csv("m2.csv")
m2
rownames(m2)
write.csv(m2, "m2.csv", row.names=F)
read.csv("m2.csv")
rownames(m2)
aaa <- read.csv("m2.csv")
aaa
save(m2, file="m2.RData")
load("m2.RData")
m2
lista <- list()
lista
lista[[1]] <- m2
lista
lista
lista
list[[2]] <- c(1, 2, 3)
lista
lista <- list()
lista
lista[[1]] <- m2
lista
list[[2]] <- c(1, 2, 3)
lista[[2]] <- c(1, 2, 3)
lista
lista[[3]] <- c("a", "b", "c")
lista[[2]]
lista
lista[[2]][1]
lista[1]
lista[1]
lista[1]
lista[[1]]
aa <- lista[[1]]
aa[1,]
save(lista, "lista.RData") # csv로 저장할 수 없다.
save(lista, file="lista.RData") # csv로 저장할 수 없다.
lista
load("list.RData")
load("lista.RData")
m <- matrix(1:15, ncol=3, byrow=T)
m[,1] <- as.character(m[,1])
m[,1] <- as.number(m[,1])
m[,1] <- as.numeric(m[,1])
m <- matrix(1:15, ncol=3, byrow=T)
m[,1] <- as.character(m[,1])
m<-data.frame(m)
str(m)
m[,1] <- as.numeric(m[,1])
m[,1] <- as.numeric(m[,1])
m[,2] <- as.numeric(m[,2])
m[,3] <- as.numeric(m[,3])
m <- matrix(1:15, ncol=3, byrow=T)
m[,1] <- as.character(m[,1])
m<-data.frame(m)
str(m)
str(m)
m[,1] <- as.numeric(m[,1])
str(m)
m[,2] <- as.numeric(m[,2])
m[,3] <- as.numeric(m[,3])
for(i in 1:ncol(m)) {
m[,i] <- as.numeric(m[,i])
}
str(m)
plot(1)
# r plot -> ggplot
plot(1)
plot(m2)
m
plot(m)
cor(m)
? rnorm
rnorm(100)
b <- rnorm(100) # 표준 정규분포를 따르는 변수 100개 생성
plot(rnorm(100))
b <- rnorm(100) # 표준 정규분포를 따르는 변수 100개 랜덤 생성
plot(rnorm(100))
hist(b)
plot(rnorm(100))
cbind(b, b, b)
data <- cbind(b, b, b)
cor(data)
data
plot(data.frame(data))
data <- cbind(b, b, b)
data
cor(data)
plot(data.frame(data))
data <- cbind(rnorm(100), rnorm(100), rnorm(100))
data
cor(data)
plot(data.frame(data))
ts.plot(data)
ts.plot(data[,3])
plot(data[,3])
ts.plot(data[,3])
plot(data[,3])
ts.plot(data[,3])
ts.plot(data, col=c('red', 'blue', 'black'))
data2 <- data.frame(data)
head(data2)
lm(X3~X1, data=data2)
lm(X3~, data=data2)
lm(X3~., data=data2)
fit <- lm(X3~., data=data2)
sum(fit$residuals)
sum((fit$residuals)^2)
for(i in 1:30){
data3 <- cbind(data2, rnor(100))
colnames(data2) <- paste0("v", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sum((fit$residuals)^2) # sum of squares error SSE
}
for(i in 1:30){
data3 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("v", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
}
for(i in 1:30){
data2 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("v", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
ts.plot(sse)
}
for(i in 1:30){
data2 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("v", 1:ncol(data2))
fit<-lm(x1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
ts.plot(sse)
}
for(i in 1:30){
data2 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("X", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
ts.plot(sse)
}
sse <- sum((fit$residuals)^2) # sum of squares error SSE
for(i in 1:30){
data2 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("X", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
ts.plot(sse)
}
for(i in 1:30){
data2 <- cbind(data2, rnorm(100))
colnames(data2) <- paste0("X", 1:ncol(data2))
fit<-lm(X1~., data=data2)
sse <- c(sse, sum((fit$residuals)^2)) # sum of squares error SSE
ts.plot(sse)
Sys.sleep(0.1)
}
